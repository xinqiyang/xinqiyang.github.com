<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>xinqiyang notes</title>
  
  <subtitle>Nothing behind me, everything ahead of me,as is ever so on the road.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yangxinqi.com/"/>
  <updated>2018-02-06T03:30:41.048Z</updated>
  <id>http://yangxinqi.com/</id>
  
  <author>
    <name>xinqiyang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>区块链数据分析之保存币安历史数据</title>
    <link href="http://yangxinqi.com/2018/02/06/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8B%E4%BF%9D%E5%AD%98%E5%B8%81%E5%AE%89%E5%8E%86%E5%8F%B2%E6%95%B0%E6%8D%AE/"/>
    <id>http://yangxinqi.com/2018/02/06/区块链数据分析之保存币安历史数据/</id>
    <published>2018-02-06T01:29:25.000Z</published>
    <updated>2018-02-06T03:30:41.048Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Feb 06 2018 13:42:26 GMT+0800 (CST) --><p>最近币圈大跌，作为一棵吊在高处的韭菜，还是觉得好好的做开发比跟风靠谱多了，遂静下心来，好好的写点文章，做点数据分析，抓取进阶下。</p><p>接触区块链其实在三年前，一个朋友就提醒我们多关注区块链，那个时候的我们还是少不更事的认为那个虚的东西又撒好玩的，到现在回首看，眼界比技能和运气要重要得多。做人没有好的眼光，上不去的，还是捡起来好好的分析下区块链技术，后续会多些一些。</p><p>言归正传，最近在分析各个交易所的数据，对接了几个交易所（bitflyer， coincheck， binance，btcbox）后续在对接一些其他的。首先作为技术出身，还是好好的做数据分析吧，先爬一些数据下来，就到处找相关的接口文档，然后通过python来把数据抓下来。这块就需要大家提供的访问api，有很多人写了交易所第三方的访问api，发布在github上，我们就使用这些api来访问以获取数据。</p><p>看了好几篇文章，第一篇先给澳大利亚的一个大叔级高手打广告，翻译下他的文章，这个哥们写了好几个交易所的获取客户端。</p><p>原文链接： <a href="https://sammchardy.github.io/binance/2018/01/08/historical-data-download-binance.html" target="_blank" rel="noopener">https://sammchardy.github.io/binance/2018/01/08/historical-data-download-binance.html</a></p><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>任何交易策略的基础都是有一个好的回测方案，如果你没有数据，就没法回测，数据还是很重要的。</p><p>在这篇文章中，我将详细描述通过Binance API在指定时间范围内下载和保存币安的历史K线数据。</p><p>这个例子不需要有币安的账户，直接访问公开的API即可。</p><h3 id="首先需要处理时间格式"><a href="#首先需要处理时间格式" class="headerlink" title="首先需要处理时间格式"></a>首先需要处理时间格式</h3><p>因为币安服务器只接受毫秒级别的时间戳的时间段，所以需要将工作日时间转换为毫秒时间戳。</p><p>本次使用强大的python来进行处理，安装dateparser包。命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install dateparser</span><br></pre></td></tr></table></figure><p>我们可以得写个函数将日期字符串直接转换成毫秒格式。例子如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(date_to_milliseconds(<span class="string">"January 01, 2018"</span>))</span><br><span class="line">print(date_to_milliseconds(<span class="string">"11 hours ago UTC"</span>))</span><br><span class="line">print(date_to_milliseconds(<span class="string">"now UTC"</span>))</span><br></pre></td></tr></table></figure><h3 id="获取币安的K线数据"><a href="#获取币安的K线数据" class="headerlink" title="获取币安的K线数据"></a>获取币安的K线数据</h3><p>现在我们希望通过 get_klines API来获取实际的交易量数据。</p><p>先看下接口参数：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">symbol - e.g ETHBTC  币种数据</span><br><span class="line">interval - one of (1m, 3m, 5m, 15m, 30m, 1h, 2h, 4h, 6h, 8h, 12h, 1d, 3d, 1w, 1M) 时间范围</span><br><span class="line">limit - max 500  限制条数</span><br><span class="line">startTime - milliseconds  开始时间 单位毫秒</span><br><span class="line">endTime - milliseconds    结束时间 单位毫秒</span><br></pre></td></tr></table></figure><p>因为一次最多取500条，如果时间范围比较大，我们得循环获取。</p><p>返回结果格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="number">1499040000000</span>,      <span class="comment"># Open time </span></span><br><span class="line">    <span class="string">"0.01634790"</span>,       <span class="comment"># Open</span></span><br><span class="line">    <span class="string">"0.80000000"</span>,       <span class="comment"># High</span></span><br><span class="line">    <span class="string">"0.01575800"</span>,       <span class="comment"># Low</span></span><br><span class="line">    <span class="string">"0.01577100"</span>,       <span class="comment"># Close</span></span><br><span class="line">    <span class="string">"148976.11427815"</span>,  <span class="comment"># Volume</span></span><br><span class="line">    <span class="number">1499644799999</span>,      <span class="comment"># Close time</span></span><br><span class="line">    <span class="string">"2434.19055334"</span>,    <span class="comment"># Quote asset volume</span></span><br><span class="line">    <span class="number">308</span>,                <span class="comment"># Number of trades</span></span><br><span class="line">    <span class="string">"1756.87402397"</span>,    <span class="comment"># Taker buy base asset volume</span></span><br><span class="line">    <span class="string">"28.46694368"</span>,      <span class="comment"># Taker buy quote asset volume</span></span><br><span class="line">    <span class="string">"17928899.62484339"</span> <span class="comment"># Ignore</span></span><br><span class="line">  ]</span><br></pre></td></tr></table></figure><p>我们把返回的结果都存储起来，有多少存多少。</p><h3 id="币安时间间隔intervals"><a href="#币安时间间隔intervals" class="headerlink" title="币安时间间隔intervals"></a>币安时间间隔intervals</h3><p>参数中的intervals是一个字符串，一次请求只能是在某个范围内，一次限制是500，所以需要获取较长时间段数据的话，需要对时间间隔进行毫秒转换。将API中设定的时间，转换成毫秒， 例子如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> binance.client <span class="keyword">import</span> Client</span><br><span class="line"></span><br><span class="line">print(interval_to_milliseconds(Client.KLINE_INTERVAL_1MINUTE))</span><br><span class="line">print(interval_to_milliseconds(Client.KLINE_INTERVAL_30MINUTE))</span><br><span class="line">print(interval_to_milliseconds(KLINE_INTERVAL_1WEEK))</span><br></pre></td></tr></table></figure><h3 id="获取K线数据"><a href="#获取K线数据" class="headerlink" title="获取K线数据"></a>获取K线数据</h3><p>准备好了之后，我们开始写方法来获取历史数据。 我们通过时间范围和intervals间隔参数很容易的获取。例子如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> binance.client <span class="keyword">import</span> Client</span><br><span class="line"></span><br><span class="line"><span class="comment"># fetch 1 minute klines for the last day up until now</span></span><br><span class="line">klines = get_historical_klines(<span class="string">"BNBBTC"</span>, Client.KLINE_INTERVAL_1MINUTE, <span class="string">"1 day ago UTC"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># fetch 30 minute klines for the last month of 2017</span></span><br><span class="line">klines = get_historical_klines(<span class="string">"ETHBTC"</span>, Client.KLINE_INTERVAL_30MINUTE, <span class="string">"1 Dec, 2017"</span>, <span class="string">"1 Jan, 2018"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># fetch weekly klines since it listed</span></span><br><span class="line">klines = get_historical_klines(<span class="string">"NEOBTC"</span>, KLINE_INTERVAL_1WEEK, <span class="string">"1 Jan, 2017"</span>)</span><br></pre></td></tr></table></figure><p>完整的代码可以从<a href="https://github.com/sammchardy/python-binance" target="_blank" rel="noopener">python-binance</a>项目的例子中获取，链接： <a href="https://github.com/sammchardy/python-binance/tree/master/examples" target="_blank" rel="noopener">examples folder</a></p><h3 id="保存到文件"><a href="#保存到文件" class="headerlink" title="保存到文件"></a>保存到文件</h3><p>获取到的数据后存到文件以方便后面使用。代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> binance.client <span class="keyword">import</span> Client</span><br><span class="line"></span><br><span class="line">symbol = <span class="string">"ETHBTC"</span></span><br><span class="line">start = <span class="string">"1 Dec, 2017"</span></span><br><span class="line">end = <span class="string">"1 Jan, 2018"</span></span><br><span class="line">interval = Client.KLINE_INTERVAL_30MINUTE</span><br><span class="line"></span><br><span class="line">klines = get_historical_klines(symbol, interval, start, end)</span><br><span class="line"></span><br><span class="line"><span class="comment"># open a file with filename including symbol, interval and start and end converted to milliseconds</span></span><br><span class="line"><span class="keyword">with</span> open(</span><br><span class="line">    <span class="string">"Binance_&#123;&#125;_&#123;&#125;_&#123;&#125;-&#123;&#125;.json"</span>.format(</span><br><span class="line">        symbol, </span><br><span class="line">        interval, </span><br><span class="line">        date_to_milliseconds(start),</span><br><span class="line">        date_to_milliseconds(end)</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">'w'</span> <span class="comment"># set file write mode</span></span><br><span class="line">) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(json.dumps(klines))</span><br></pre></td></tr></table></figure><h3 id="打赏功能"><a href="#打赏功能" class="headerlink" title="打赏功能"></a>打赏功能</h3><p>这些好的方法，已经添加到<a href="https://github.com/sammchardy/python-binance" target="_blank" rel="noopener">python-binance</a>方便大家使用。</p><p><code>date_to_milliseconds</code> 和 <code>interval_to_milliseconds</code>已经添加到binance.helpers中。<code>get_historical_klines</code>已经添加到finance.client中，直接调用即可。代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> binance.client <span class="keyword">import</span> Client</span><br><span class="line"></span><br><span class="line">client = Client(<span class="string">""</span>, <span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">klines = client.get_historical_klines(<span class="string">"ETHBTC"</span>, Client.KLINE_INTERVAL_30MINUTE, <span class="string">"1 Dec, 2017"</span>, <span class="string">"1 Jan, 2018"</span>)</span><br></pre></td></tr></table></figure><h3 id="接下来"><a href="#接下来" class="headerlink" title="接下来"></a>接下来</h3><p>使用这些获取的数据，我们可以在后续的回测中使用。</p><p>使用Kucoin交易所的用户同样使用<a href="https://github.com/sammchardy/python-kucoin" target="_blank" rel="noopener">python-kucoin</a> 也有这些功能。</p><p>后续还会写一些使用 <a href="https://pandas.pydata.org/" target="_blank" rel="noopener">pandas</a> 和 <a href="https://github.com/mrjbq7/ta-lib" target="_blank" rel="noopener">TA-Lib</a> 来进行简单的回测的文章。</p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p><a href="https://twitter.com/sammchardy" target="_blank" rel="noopener">sammchardy</a> 是一个很帅的澳洲哥们，大家可以在twitter上关注他， 作为开源的api客户端，写的也非常的便捷，对于这样有分享的精神的哥们，大家是不是给点打赏呢，他也给了Donate地址了。大家可以查看原文。</p><p>我在最后也贴下全文例子的链接：</p><p><a href="https://github.com/sammchardy/python-binance/blob/master/examples/save_historical_data.py" target="_blank" rel="noopener">save_historical_data.py</a> 大家可以下下来实际的跑一下试试。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> dateparser</span><br><span class="line"><span class="keyword">import</span> pytz</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> binance.client <span class="keyword">import</span> Client</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">date_to_milliseconds</span><span class="params">(date_str)</span>:</span></span><br><span class="line">    <span class="string">"""Convert UTC date to milliseconds</span></span><br><span class="line"><span class="string">    If using offset strings add "UTC" to date string e.g. "now UTC", "11 hours ago UTC"</span></span><br><span class="line"><span class="string">    See dateparse docs for formats http://dateparser.readthedocs.io/en/latest/</span></span><br><span class="line"><span class="string">    :param date_str: date in readable format, i.e. "January 01, 2018", "11 hours ago UTC", "now UTC"</span></span><br><span class="line"><span class="string">    :type date_str: str</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># get epoch value in UTC</span></span><br><span class="line">    epoch = datetime.utcfromtimestamp(<span class="number">0</span>).replace(tzinfo=pytz.utc)</span><br><span class="line">    <span class="comment"># parse our date string</span></span><br><span class="line">    d = dateparser.parse(date_str)</span><br><span class="line">    <span class="comment"># if the date is not timezone aware apply UTC timezone</span></span><br><span class="line">    <span class="keyword">if</span> d.tzinfo <span class="keyword">is</span> <span class="keyword">None</span> <span class="keyword">or</span> d.tzinfo.utcoffset(d) <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        d = d.replace(tzinfo=pytz.utc)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># return the difference in time</span></span><br><span class="line">    <span class="keyword">return</span> int((d - epoch).total_seconds() * <span class="number">1000.0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">interval_to_milliseconds</span><span class="params">(interval)</span>:</span></span><br><span class="line">    <span class="string">"""Convert a Binance interval string to milliseconds</span></span><br><span class="line"><span class="string">    :param interval: Binance interval string 1m, 3m, 5m, 15m, 30m, 1h, 2h, 4h, 6h, 8h, 12h, 1d, 3d, 1w</span></span><br><span class="line"><span class="string">    :type interval: str</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">         None if unit not one of m, h, d or w</span></span><br><span class="line"><span class="string">         None if string not in correct format</span></span><br><span class="line"><span class="string">         int value of interval in milliseconds</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    ms = <span class="keyword">None</span></span><br><span class="line">    seconds_per_unit = &#123;</span><br><span class="line">        <span class="string">"m"</span>: <span class="number">60</span>,</span><br><span class="line">        <span class="string">"h"</span>: <span class="number">60</span> * <span class="number">60</span>,</span><br><span class="line">        <span class="string">"d"</span>: <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span>,</span><br><span class="line">        <span class="string">"w"</span>: <span class="number">7</span> * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    unit = interval[<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">if</span> unit <span class="keyword">in</span> seconds_per_unit:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            ms = int(interval[:<span class="number">-1</span>]) * seconds_per_unit[unit] * <span class="number">1000</span></span><br><span class="line">        <span class="keyword">except</span> ValueError:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">return</span> ms</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_historical_klines</span><span class="params">(symbol, interval, start_str, end_str=None)</span>:</span></span><br><span class="line">    <span class="string">"""Get Historical Klines from Binance</span></span><br><span class="line"><span class="string">    See dateparse docs for valid start and end string formats http://dateparser.readthedocs.io/en/latest/</span></span><br><span class="line"><span class="string">    If using offset strings for dates add "UTC" to date string e.g. "now UTC", "11 hours ago UTC"</span></span><br><span class="line"><span class="string">    :param symbol: Name of symbol pair e.g BNBBTC</span></span><br><span class="line"><span class="string">    :type symbol: str</span></span><br><span class="line"><span class="string">    :param interval: Biannce Kline interval</span></span><br><span class="line"><span class="string">    :type interval: str</span></span><br><span class="line"><span class="string">    :param start_str: Start date string in UTC format</span></span><br><span class="line"><span class="string">    :type start_str: str</span></span><br><span class="line"><span class="string">    :param end_str: optional - end date string in UTC format</span></span><br><span class="line"><span class="string">    :type end_str: str</span></span><br><span class="line"><span class="string">    :return: list of OHLCV values</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># create the Binance client, no need for api key</span></span><br><span class="line">    client = Client(<span class="string">""</span>, <span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># init our list</span></span><br><span class="line">    output_data = []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># setup the max limit</span></span><br><span class="line">    limit = <span class="number">500</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># convert interval to useful value in seconds</span></span><br><span class="line">    timeframe = interval_to_milliseconds(interval)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># convert our date strings to milliseconds</span></span><br><span class="line">    start_ts = date_to_milliseconds(start_str)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># if an end time was passed convert it</span></span><br><span class="line">    end_ts = <span class="keyword">None</span></span><br><span class="line">    <span class="keyword">if</span> end_str:</span><br><span class="line">        end_ts = date_to_milliseconds(end_str)</span><br><span class="line"></span><br><span class="line">    idx = <span class="number">0</span></span><br><span class="line">    <span class="comment"># it can be difficult to know when a symbol was listed on Binance so allow start time to be before list date</span></span><br><span class="line">    symbol_existed = <span class="keyword">False</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        <span class="comment"># fetch the klines from start_ts up to max 500 entries or the end_ts if set</span></span><br><span class="line">        temp_data = client.get_klines(</span><br><span class="line">            symbol=symbol,</span><br><span class="line">            interval=interval,</span><br><span class="line">            limit=limit,</span><br><span class="line">            startTime=start_ts,</span><br><span class="line">            endTime=end_ts</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="comment"># handle the case where our start date is before the symbol pair listed on Binance</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> symbol_existed <span class="keyword">and</span> len(temp_data):</span><br><span class="line">            symbol_existed = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> symbol_existed:</span><br><span class="line">            <span class="comment"># append this loops data to our output data</span></span><br><span class="line">            output_data += temp_data</span><br><span class="line"></span><br><span class="line">            <span class="comment"># update our start timestamp using the last value in the array and add the interval timeframe</span></span><br><span class="line">            start_ts = temp_data[len(temp_data) - <span class="number">1</span>][<span class="number">0</span>] + timeframe</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># it wasn't listed yet, increment our start date</span></span><br><span class="line">            start_ts += timeframe</span><br><span class="line"></span><br><span class="line">        idx += <span class="number">1</span></span><br><span class="line">        <span class="comment"># check if we received less than the required limit and exit the loop</span></span><br><span class="line">        <span class="keyword">if</span> len(temp_data) &lt; limit:</span><br><span class="line">            <span class="comment"># exit the while loop</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># sleep after every 3rd call to be kind to the API</span></span><br><span class="line">        <span class="keyword">if</span> idx % <span class="number">3</span> == <span class="number">0</span>:</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> output_data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">symbol = <span class="string">"ETHBTC"</span></span><br><span class="line">start = <span class="string">"1 Dec, 2017"</span></span><br><span class="line">end = <span class="string">"1 Jan, 2018"</span></span><br><span class="line">interval = Client.KLINE_INTERVAL_30MINUTE</span><br><span class="line"></span><br><span class="line">klines = get_historical_klines(symbol, interval, start, end)</span><br><span class="line"></span><br><span class="line"><span class="comment"># open a file with filename including symbol, interval and start and end converted to milliseconds</span></span><br><span class="line"><span class="keyword">with</span> open(</span><br><span class="line">    <span class="string">"Binance_&#123;&#125;_&#123;&#125;_&#123;&#125;-&#123;&#125;.json"</span>.format(</span><br><span class="line">        symbol,</span><br><span class="line">        interval,</span><br><span class="line">        date_to_milliseconds(start),</span><br><span class="line">        date_to_milliseconds(end)</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">'w'</span>  <span class="comment"># set file write mode</span></span><br><span class="line">) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(json.dumps(klines))</span><br></pre></td></tr></table></figure><p>执行例子:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 save_historical_data.py</span><br></pre></td></tr></table></figure><p>生成文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Binance_ETHBTC_30m_1512086400000-1514764800000.json</span><br></pre></td></tr></table></figure><p>返回结果例子：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  [</span><br><span class="line">    <span class="number">1512086400000</span>,</span><br><span class="line">    <span class="string">"0.04368400"</span>,</span><br><span class="line">    <span class="string">"0.04375100"</span>,</span><br><span class="line">    <span class="string">"0.04334200"</span>,</span><br><span class="line">    <span class="string">"0.04366500"</span>,</span><br><span class="line">    <span class="string">"2081.85600000"</span>,</span><br><span class="line">    <span class="number">1512088199999</span>,</span><br><span class="line">    <span class="string">"90.79655078"</span>,</span><br><span class="line">    <span class="number">3904</span>,</span><br><span class="line">    <span class="string">"976.19100000"</span>,</span><br><span class="line">    <span class="string">"42.59074736"</span>,</span><br><span class="line">    <span class="string">"271480.34213668"</span></span><br><span class="line">  ],</span><br><span class="line">  [</span><br><span class="line">    <span class="number">1512088200000</span>,</span><br><span class="line">    <span class="string">"0.04360200"</span>,</span><br><span class="line">    <span class="string">"0.04369900"</span>,</span><br><span class="line">    <span class="string">"0.04325100"</span>,</span><br><span class="line">    <span class="string">"0.04350100"</span>,</span><br><span class="line">    <span class="string">"2420.48100000"</span>,</span><br><span class="line">    <span class="number">1512089999999</span>,</span><br><span class="line">    <span class="string">"105.27683806"</span>,</span><br><span class="line">    <span class="number">2775</span>,</span><br><span class="line">    <span class="string">"1133.24800000"</span>,</span><br><span class="line">    <span class="string">"49.31486895"</span>,</span><br><span class="line">    <span class="string">"271300.32546398"</span></span><br><span class="line">  ],</span><br><span class="line">  [</span><br><span class="line">    <span class="number">1512090000000</span>,</span><br><span class="line">    <span class="string">"0.04350100"</span>,</span><br><span class="line">    <span class="string">"0.04379400"</span>,</span><br><span class="line">    <span class="string">"0.04304900"</span>,</span><br><span class="line">    <span class="string">"0.04370500"</span>,</span><br><span class="line">    <span class="string">"2192.51500000"</span>,</span><br><span class="line">    <span class="number">1512091799999</span>,</span><br><span class="line">    <span class="string">"95.48824264"</span>,</span><br><span class="line">    <span class="number">2359</span>,</span><br><span class="line">    <span class="string">"1029.30200000"</span>,</span><br><span class="line">    <span class="string">"44.86783356"</span>,</span><br><span class="line">    <span class="string">"271143.81327337"</span></span><br><span class="line">  ],</span><br><span class="line">  [</span><br><span class="line">    <span class="number">1512091800000</span>,</span><br><span class="line">    <span class="string">"0.04374900"</span>,</span><br><span class="line">    <span class="string">"0.04392000"</span>,</span><br><span class="line">    <span class="string">"0.04361300"</span>,</span><br><span class="line">    <span class="string">"0.04378100"</span>,</span><br><span class="line">    <span class="string">"1482.24800000"</span>,</span><br><span class="line">    <span class="number">1512093599999</span>,</span><br><span class="line">    <span class="string">"64.86877196"</span>,</span><br><span class="line">    <span class="number">2112</span>,</span><br><span class="line">    <span class="string">"704.81600000"</span>,</span><br><span class="line">    <span class="string">"30.85380066"</span>,</span><br><span class="line">    <span class="string">"271394.84389969"</span></span><br><span class="line">  ],</span><br><span class="line">  [</span><br><span class="line">    <span class="number">1512093600000</span>,</span><br><span class="line">    <span class="string">"0.04375800"</span>,</span><br><span class="line">    <span class="string">"0.04424900"</span>,</span><br><span class="line">    <span class="string">"0.04364800"</span>,</span><br><span class="line">    <span class="string">"0.04403800"</span>,</span><br><span class="line">    <span class="string">"2073.49800000"</span>,</span><br><span class="line">    <span class="number">1512095399999</span>,</span><br><span class="line">    <span class="string">"90.95341447"</span>,</span><br><span class="line">    <span class="number">2763</span>,</span><br><span class="line">    <span class="string">"996.44700000"</span>,</span><br><span class="line">    <span class="string">"43.72006243"</span>,</span><br><span class="line">    <span class="string">"271126.63134592"</span></span><br><span class="line">  ],</span><br><span class="line">  [</span><br><span class="line">    <span class="number">1512095400000</span>,</span><br><span class="line">    <span class="string">"0.04400500"</span>,</span><br><span class="line">    <span class="string">"0.04421400"</span>,</span><br><span class="line">    <span class="string">"0.04380000"</span>,</span><br><span class="line">    <span class="string">"0.04389900"</span>,</span><br><span class="line">    <span class="string">"1675.47800000"</span>,</span><br><span class="line">    <span class="number">1512097199999</span>,</span><br><span class="line">    <span class="string">"73.62046216"</span>,</span><br><span class="line">    <span class="number">1817</span>,</span><br><span class="line">    <span class="string">"808.25500000"</span>,</span><br><span class="line">    <span class="string">"35.52008528"</span>,</span><br><span class="line">    <span class="string">"271368.11447690"</span></span><br><span class="line">  ],</span><br><span class="line">  [</span><br><span class="line">    <span class="number">1512097200000</span>,</span><br><span class="line">    <span class="string">"0.04390400"</span>,</span><br><span class="line">    <span class="string">"0.04413600"</span>,</span><br><span class="line">    <span class="string">"0.04364200"</span>,</span><br><span class="line">    <span class="string">"0.04400500"</span>,</span><br><span class="line">    <span class="string">"2138.10400000"</span>,</span><br><span class="line">    <span class="number">1512098999999</span>,</span><br><span class="line">    <span class="string">"93.95901243"</span>,</span><br><span class="line">    <span class="number">2260</span>,</span><br><span class="line">    <span class="string">"1157.93700000"</span>,</span><br><span class="line">    <span class="string">"50.88996640"</span>,</span><br><span class="line">    <span class="string">"271143.40315253"</span></span><br><span class="line">  ]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>大家可以试试，在后续回测中可以用到。</p><p>如果大家遇到报错，请升级下cryptography的包，命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install -U cryptography</span><br></pre></td></tr></table></figure><p>后续我也会多些一些原创的区块链技术方面的文章。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Tue Feb 06 2018 13:42:26 GMT+0800 (CST) --&gt;&lt;p&gt;最近币圈大跌，作为一棵吊在高处的韭菜，还是觉得好好的做开发比跟风靠谱多了，遂静下心来，好好的写点文章，做点数据分析，抓取进阶下。&lt;/p&gt;&lt;p&gt;接触区块链其实
      
    
    </summary>
    
      <category term="blockchain" scheme="http://yangxinqi.com/categories/blockchain/"/>
    
    
      <category term="block chain, binance, historical data" scheme="http://yangxinqi.com/tags/block-chain-binance-historical-data/"/>
    
  </entry>
  
  <entry>
    <title>将blog迁移到hexo了</title>
    <link href="http://yangxinqi.com/2018/02/06/%E5%B0%86blog%E8%BF%81%E7%A7%BB%E5%88%B0hexo%E4%BA%86/"/>
    <id>http://yangxinqi.com/2018/02/06/将blog迁移到hexo了/</id>
    <published>2018-02-06T01:14:00.000Z</published>
    <updated>2018-02-06T03:30:45.466Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Feb 06 2018 13:42:26 GMT+0800 (CST) --><p><img src="/images/hexo.png?style=centerme" alt="img"></p><h2 id="总是别人的好"><a href="#总是别人的好" class="headerlink" title="总是别人的好"></a>总是别人的好</h2><p>看东西总是别人的好，之前用的octopress搭建在github page上的notes，折腾了2回了，之前因为换了机器了之后，ruby的环境丢了，重新整了下。 换了下octopress的theme，然后一年才写了2-3篇，战斗力严重下降。</p><p>最近一直在看不少技术者的blog，看他们写的都不错，都是使用hexo，所以查了下，hexo是重写过的，比起之前用ruby下的rake写的octopress，感觉看上去更好看一些，而且果然提供了很多的theme，感觉做的都很全也很漂亮。遂决定换到hexo了，用下来，感觉很方便，插件和风格也都很全。</p><p>插件这块，看到大家加了打赏功能了，我也默默的给加上了，不知道后续会不会有人给我打赏呢，入乡随俗啊，感觉国内这块的风气这点还是比较好的。 写文章的人很多，而且知识付费的意识也起来了。</p><h2 id="说到免费的https"><a href="#说到免费的https" class="headerlink" title="说到免费的https"></a>说到免费的https</h2><p>看到大家的个人域名都是使用https的，之前的github pages是不支持https绑定的，结果一查，发现cloudflare支持https的跳转，这块突然想到，其实他们就是拿到解析到自己的服务器，作为一个反向代理，在把后端的页面直接给返回就行，是能够实现https的，而且还是免费的，好吧，这里赞下cloudflare。美国的一些互联网公司的产品设计果然还是很赞的。</p><h2 id="复活yangxinqi-com"><a href="#复活yangxinqi-com" class="headerlink" title="复活yangxinqi.com"></a>复活yangxinqi.com</h2><p>去年忙活了一整年了，发现时间特别少，没有咋个动笔，2018也过去2个月了，今年目标每个月1-2篇文章吧。</p><p>这点还是可以实现的，停下来总结总结，总比每天忙个不停要好的多。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Tue Feb 06 2018 13:42:26 GMT+0800 (CST) --&gt;&lt;p&gt;&lt;img src=&quot;/images/hexo.png?style=centerme&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;&lt;h2 id=&quot;总是别人的好&quot;&gt;&lt;a hr
      
    
    </summary>
    
      <category term="other" scheme="http://yangxinqi.com/categories/other/"/>
    
    
      <category term="octopress, hexo, next theme" scheme="http://yangxinqi.com/tags/octopress-hexo-next-theme/"/>
    
  </entry>
  
  <entry>
    <title>回顾2017</title>
    <link href="http://yangxinqi.com/2018/02/03/hui-gu-2017/"/>
    <id>http://yangxinqi.com/2018/02/03/hui-gu-2017/</id>
    <published>2018-02-03T13:11:27.000Z</published>
    <updated>2018-02-03T16:30:52.969Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Feb 06 2018 13:42:26 GMT+0800 (CST) --><p><img src="/images/shan.jpg?style=centerme" alt="img"></p><h3 id="回首"><a href="#回首" class="headerlink" title="回首"></a>回首</h3><p>2017年匆匆而过，回想下过去的一年，忙忙碌碌可始终还是两手空空，很充分的体会到初创公司，为之全力付出后商业模式无情的验证结果，一个公司是否能够赚钱，看结果就知道了。</p><p>用几个数字概括下：</p><p>开发了3个项目到上线</p><p>举办了10场亿咖啡的线下活动</p><p>投资了2家公司</p><h3 id="敏捷开发实践"><a href="#敏捷开发实践" class="headerlink" title="敏捷开发实践"></a>敏捷开发实践</h3><p>从1月开始到6月，都在为了客户的项目，作一个工程师应该做的事情，每天加班的把客户安排的活给清理掉。</p><p>转眼半年过去的很快。</p><p>开发还是挺有意思的，新的敏捷模式 + 使用N多的外部服务，用极少的工程师和时间快速的实现出业务流程，这点真的体会到卢兄的这种技术管理的思想还是很值得学习的。</p><p>在此感谢下卢兄。</p><h3 id="举办活动"><a href="#举办活动" class="headerlink" title="举办活动"></a>举办活动</h3><p>前半年活动也不少，弄了AI + 区块链的活动，吸引了不少朋友过来，也结交了很多新朋友。</p><p>在日本IT这个闷的不行的地方，我们也算尽了一点点力吧。</p><p>举办了10场活动，还是没有达到每月一场的目标，在这里感谢各位讲师，特别是王博士的AI基础普及课程。</p><h3 id="经历一场撕逼"><a href="#经历一场撕逼" class="headerlink" title="经历一场撕逼"></a>经历一场撕逼</h3><p>做为我们的客户，因为我们做了一个媒体的项目，居然过来要和我们撕逼，说我们也做了他们的行业，对于老熟人和创业者，心胸居然这么狭窄，这点让我比较难以接收，也撕逼了一场，不知道现在的项目还活着么？现在都记不起这个项目的名字了。</p><h3 id="投资一个新媒体项目"><a href="#投资一个新媒体项目" class="headerlink" title="投资一个新媒体项目"></a>投资一个新媒体项目</h3><p>为去年一起的项目启动了一个新媒体项目，投资人想打造一个类似今日头条一样的日本本地生活服务的APP，我们开发了个，但是陷入长期的没有推广的情况，体会到做一个项目容易，但是推广和坚持一个项目有多难。</p><p>也体会到项目没有投入继续维持的痛苦。最终妥协了，团队成员都派遣了。</p><h3 id="做了最不想做却不得不做的事情"><a href="#做了最不想做却不得不做的事情" class="headerlink" title="做了最不想做却不得不做的事情"></a>做了最不想做却不得不做的事情</h3><p>项目失败，无力支撑公司的运转，进而把团队的兄弟们都放到现场去了。 为了维持我们也都没有办法，作为一个项目负责人，是大家的带头大哥，我也比较抱歉，对于未来如何，现在也无可知晓了。 派遣还在继续，事情还是得继续推动下去，团队散出去容易，回来相对还是挺难的。这块多亏了张总的照顾，在这里表示感谢。</p><h3 id="等的花儿都谢了的一年也没等到"><a href="#等的花儿都谢了的一年也没等到" class="headerlink" title="等的花儿都谢了的一年也没等到"></a>等的花儿都谢了的一年也没等到</h3><p>合伙人归来，作为一个单枪匹马的创业者，公司从多个股东干到就剩下一个，也是没有谁了。 这点现在看来还是很需要我们把事情干好的，对于一个烂摊子谁也不想出来收拾，当然对于一个没有未来感的公司，大家也都不想投入是一样的。这块我们应该如何来分清主次呢？ 孤独感和协作感很考验一个创始团队。合伙人之于家里是同等重要的。</p><h3 id="出走国内"><a href="#出走国内" class="headerlink" title="出走国内"></a>出走国内</h3><p>对于没有安全感的我来讲，坚持到最后也坚持不下去的情况下，选择一口饭吃成为排解公司危机的主要方式。在坚持不下去的时候，选择了冷冻，开拓新的战场，在国内AI蓬勃发展的时机，回来体验下这样紧密的加班开发的环境。 国内的公司的工作氛围和日本完全不同，经历过熟悉又陌生的工作及生活后，陷入迷茫，未来会是什么样的？</p><p>其实国内之于日本没有好和不好之说，最关键的还是在一起做事情的人，国内优秀的人很多，优秀的公司也很多，其实相对于日本，竞争更为激烈，作为一个工程师需要做的事情更多。作为管理职位的人，需要发挥的更多，这块需要投入的也更多，不比自己创业付出的少，想成就一个伟大的事业，必须需要一个比较大的付出，其实如果只有一个目标，我们还是可以好好的来处理的。</p><h3 id="实战AI"><a href="#实战AI" class="headerlink" title="实战AI"></a>实战AI</h3><p>回国后的3个月，做了3个项目，上线1个，搁浅了2个，对于AI的初步认识以及实际使用有了一些更深入的了解。AI之于普通的企业来讲，还需要一个过程，但是降低成本提高效率这块，技术还是可以付出很多，有一定的提升空间。 在这边带的2个小朋友我也是刮目相看，这点真心的感觉不错，有些人战斗力爆棚，稍稍带下就可以发挥出来，有些人就不行了，上手很慢的说。</p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>一年在忙碌中匆匆而过，最对不起的还是儿子和女儿，暂时的分离只是为了将来更好的生活。</p><p>2017年努力却没有什么回报，算账目是有盈余的，实际则不然，这也许就是商业的规则。作为局中人在没有退出时机的时候，剩下的只有投入，不断的投入。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Tue Feb 06 2018 13:42:26 GMT+0800 (CST) --&gt;&lt;p&gt;&lt;img src=&quot;/images/shan.jpg?style=centerme&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;&lt;h3 id=&quot;回首&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
      <category term="other" scheme="http://yangxinqi.com/categories/other/"/>
    
    
  </entry>
  
  <entry>
    <title>请停止无效努力</title>
    <link href="http://yangxinqi.com/2017/11/12/qing-ting-zhi-wu-xiao-nu-li/"/>
    <id>http://yangxinqi.com/2017/11/12/qing-ting-zhi-wu-xiao-nu-li/</id>
    <published>2017-11-12T12:43:26.000Z</published>
    <updated>2018-02-03T16:30:46.512Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Feb 06 2018 13:42:26 GMT+0800 (CST) --><p><img src="/images/sign.jpg?style=centerme" alt="img"></p><p>往往的往往，都是到最后的时间，开始做事情，几十年来依然是如此，从未改变过，为什么会这样呢？习惯吧，一个习惯的习惯，一直持续自己的各种做事方式，不尝试去改变自己，这样肯定是不行的说。</p><p>休息了一天，其实呢，感触比较深的是，做公司做人都是一样，盈利的目的性太强了，这个看过去不是什么好事，前期野蛮生长是必须的，壮大之后，你可以考虑生态，考虑到大家的幸福指数，但是在一切未安定之前，很难做到这块。</p><h4 id="自我效能"><a href="#自我效能" class="headerlink" title="自我效能"></a>自我效能</h4><p>勤奋一直都很勤奋的，每天不浪费时间，每周也不浪费时间，每个月更是如此，各种杂事及各种开发任务，客户维系，现在静下来，好好的梳理下，其实发现，真心需要整理下，迫切需要停止掉无谓的勤奋，一直很努力，依旧很失败，这块也许是很多人的写照吧。</p><h4 id="团队"><a href="#团队" class="headerlink" title="团队"></a>团队</h4><p>找优秀的人，有优秀的人加盟，或者是一直培养，让她成长起来，这2种方式对于人，是应该如何衡量呢？人又有拼劲，又能和团队的其他人相处，又有很好的技术，又很有责任心，其实要求很多，大部分很难做到，哪怕是你的合作伙伴都是如此的说。 所以从自身的性格上来看，很难找到和你一起的付出而不图回报的人，随着年龄的增大，冲劲和抗风险的能力都在持续的下降，所以人还是很难能够一直一直的走下去，更是拼劲全力的一起走下去。所以心态上放开来，很多事情，都是可遇而不可求的，人生总是如此，好朋友和知己总是寥寥无几，能够一起奋斗的都是在少数，我不是一个好的商人，但是可以做一个好的朋友，虽然大家都是在道上，时间流逝，一切随缘。</p><p>接下来，期望给自己找一个导师montor，急切需要一位人生导师，能够开导开导下，未来的方向在哪里？</p><p>找一些死党，当你在怎么不行的时候，也有人能够帮助你，能够让你重新出发。</p><h4 id="财务"><a href="#财务" class="headerlink" title="财务"></a>财务</h4><p>避税及年金保险，国内的五险一金以及各种税务法务方面的事情，这块都需要特别的注意，关于公司的固定资产和固定支出，这块也需要强烈的关注下，对于初创公司来讲，房租成本和其他的成本及年金保险这块每个月需要交的都是挺多的。</p><p>这块需要特别特别的注意，关注财务及正常的流水，保证正常的现金流，这块非常非常重要，这块特别要说到最推广预算方面，产品研发的水平可以控制，但是推广的成本很难控制住，所以提取做好预算是非常关键的。</p><p>还有对接在线支付，当我们需要在网上的做支付方式的时候，这块尤为重要，对接上了之后，我们能够实现正向收入并使得产品可以运营起来。</p><h4 id="方向"><a href="#方向" class="headerlink" title="方向"></a>方向</h4><p>区块链，人工智能，机器学习，未来的方向是在哪里，我们需要在哪个领域内扎根，好好的运营3年，未来很快，现在的数据内容很多，我们如何来进行很好的定位及突破方向，这块非常的重要。</p><p>选择一个好方向，现在如何金融领域深入，这块对我们来讲是一个很好的课题，金融领域结合人工智能及区块链技术，做一个稳定的定投产品出来。看好的方向及未来的发展，如何在方向压对上，赚到第一桶金，这块也非常的重要的说。</p><h4 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h4><p>先有的技术资源，各种外面已经做的很好的开源的项目及产品，我们都可以很好的用起来，虽然很多都需要另外付费的，有一些服务是能够长久使用的。</p><p>能够拿到的宣传资源，合作资源，这块也是需要很好的去梳理去实现的。</p><h4 id="人脉"><a href="#人脉" class="headerlink" title="人脉"></a>人脉</h4><p>如何认识和自己不是一个圈子的人，并把人脉维护好，需要跨界合作，现在花的时间还很少的说，这块需要强力的合作下。</p><p>跨界的人脉多认识一些，下班时间，多出去聚聚喝喝酒，有自己的圈子还是得要的说，人脉圈子还是挺重要的。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>多出去走走，把时间用在对的地方，做对的决策。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Tue Feb 06 2018 13:42:26 GMT+0800 (CST) --&gt;&lt;p&gt;&lt;img src=&quot;/images/sign.jpg?style=centerme&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;&lt;p&gt;往往的往往，都是到最后的时间，开始做
      
    
    </summary>
    
      <category term="project" scheme="http://yangxinqi.com/categories/project/"/>
    
    
  </entry>
  
  <entry>
    <title>携程技术沙龙-人机智能交互AI与客服机器人-总结</title>
    <link href="http://yangxinqi.com/2017/09/30/xi-cheng-ji-zhu-sha-long-ren-ji-zhi-neng-jiao-hu-aiyu-ke-fu-ji-qi-ren-zong-jie/"/>
    <id>http://yangxinqi.com/2017/09/30/xi-cheng-ji-zhu-sha-long-ren-ji-zhi-neng-jiao-hu-aiyu-ke-fu-ji-qi-ren-zong-jie/</id>
    <published>2017-09-30T07:29:39.000Z</published>
    <updated>2018-02-03T16:30:38.117Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Feb 06 2018 13:42:26 GMT+0800 (CST) --><p>时间： 2017-09-23 上海 携程</p><p>议题：人机智能交互AI与客服机器人</p><p>PDF及录音：<a href="https://pan.baidu.com/s/1dFmzRxf" target="_blank" rel="noopener">https://pan.baidu.com/s/1dFmzRxf</a> 提取密码： vxxw （文件超过插入大小，放到百度网盘上了）</p><p>第一讲：微软技术在客户中的应用- 微软 于辉</p><p>第二讲：腾讯语音人工智能技术的应用 - 腾讯</p><p>第四讲：UNIT：语言理解与交互艺术-百度孙珂</p><p>这些偏广告方面，我们先给略过了，下面的三个session深入聊下。</p><p>第三讲：携程AI平台及客服机器人-携程于磊</p><p><img src="/images/ctrip_ai_robot_session/c1.png?style=centerme&amp;version=1&amp;modificationDate=1506654860000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/c2.png?style=centerme&amp;modificationDate=1506654859000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/c3.png?style=centerme&amp;modificationDate=1506654860000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/c4.png?style=centerme&amp;modificationDate=1506654860000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/c5.png?style=centerme&amp;modificationDate=1506654859000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/c6.png?style=centerme&amp;modificationDate=1506654859000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/c7.png?style=centerme&amp;modificationDate=1506654860000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/c8.png?style=centerme&amp;modificationDate=1506654934000&amp;api=v2" alt="img"></p><p>第五讲：京东JIMI用户未来意图预测-京东邹波</p><p><img src="/images/ctrip_ai_robot_session/j1.png?style=centerme&amp;modificationDate=1506653514000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/j2.png?style=centerme&amp;modificationDate=1506653514000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/j3.png?style=centerme&amp;modificationDate=1506653514000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/j4.png?style=centerme&amp;modificationDate=1506653515000&amp;api=v2" alt="img"></p><p>第六讲：深度学习在智能助理产品中的应用-来也胡一川</p><p><img src="/images/ctrip_ai_robot_session/l1.png?style=centerme&amp;modificationDate=1506653709000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/l2.png?style=centerme&amp;modificationDate=1506653709000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/l3.png?style=centerme&amp;modificationDate=1506653709000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/l4.png?style=centerme&amp;modificationDate=1506653709000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/l5.png?style=centerme&amp;modificationDate=1506653710000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/l6.png?style=centerme&amp;modificationDate=1506653709000&amp;api=v2" alt="img"></p><p>第七讲：阿里小蜜-电商领域的智能助理技术实践-阿里陈海青</p><p><img src="/images/ctrip_ai_robot_session/a1.png?style=centerme&amp;modificationDate=1506654304000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/a2.png?style=centerme&amp;modificationDate=1506654304000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/a3.png?style=centerme&amp;modificationDate=1506654304000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/a4.png?style=centerme&amp;modificationDate=1506654304000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/a5.png?style=centerme&amp;modificationDate=1506654304000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/a6.png?style=centerme&amp;modificationDate=1506654304000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/a7.png?style=centerme&amp;modificationDate=1506654328000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/a8.png?style=centerme&amp;modificationDate=1506654329000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/a9.png?style=centerme&amp;modificationDate=1506654328000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/a10.png?style=centerme&amp;modificationDate=1506654329000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/a11.png?style=centerme&amp;modificationDate=1506654329000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/a12.png?style=centerme&amp;modificationDate=1506654329000&amp;api=v2" alt="img"></p><p><img src="/images/ctrip_ai_robot_session/a13.png?style=centerme&amp;modificationDate=1506654412000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/a14.png?style=centerme&amp;modificationDate=1506654412000&amp;api=v2" alt="img"></p><p><img src="/images/ctrip_ai_robot_session/a15.png?style=centerme&amp;modificationDate=1506654442000&amp;api=v2" alt="img"><img src="/images/ctrip_ai_robot_session/a16.png?style=centerme&amp;modificationDate=1506654432000&amp;api=v2" alt="img"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>携程：</p><p>针对当前携程这边AI方面的工作，主要由公共BI部门来做，现在主要是于磊带领的部门的40-50个人的规模来做，支持携程的各大产品线。针对当前智能客服的开发进度情况现在还不太清除，实际商用到什么程度？</p><p>小诗机主要用到了CNN，RNN， LSTM等各种算法，还调用了第三放的api来获取天气，季节等数据，最终通过LSTM模型来创作，这里着重提到了seq2seq和LSTM结合的方式。</p><p>对于智能机器人方面，他们使用了检索 + 意图级别 + 命名实体识别 等方法结合等给出结果。 其中算法方面用到到挺多常用到算法，模块方面主要封装成对话管理，知识图谱和个性化推荐等，在上层封装成各种应用。</p><p>京东：</p><p>京东讲等相对比较细节一些，将他们现在做等进行了下总结，主要围绕客服咨询和问答的领域，通过清洗，聚类及特种提取，来提高准确度，他们主要用java方向的架构，spring batch还有mapreduce来做。基于用户的意图识别方面，也是用BaseLine，之后用LSTM + Attention的模式来提高预测准确率，这个方面提出率一些模型调优方面的一些经验，通过L2正则化，通过加大样本数量（100w条） ，加入Dropout机制，截断式反向传播，掩模和填令，学习率自动衰减 AdaGrad，权重初始化xavier ，优化方法 sgd/adagrad/momentum ,激活函数 softmax</p><p>主要流程： 从数据源日志中– 》 分词，word2vec，去掉停用词，同义词替换，取中心词生成句子向量，聚类生成标准问题 –》 特征收集与建模 –》 建立分类模型</p><p>来也：</p><p>来也讲的也比较细节方面，主要是针对当前的问答进行技术的处理，从语意方向和问答，实体抽取和知识挖掘，意图识别来进行处理。 提到框架方面主要处理流程，embed (每个词或者句子映射为向量) –&gt; Encode（对一段文本对应的向量进行转换，转换时使用上下文信息，通常使用CNN，RNN –&gt; attend（从编码后的向量中提取对预测由价值的信息，输出为一个固定维度的向量）–&gt; predict（基于输入向量产出最终的预测） 。这里主要聊了下，他们的基于深度学习，完全数据驱动，无需特征工程，效果明显由于传统机器学习模型， 使用 双向LSTM + Attend + softmax 最终输出 意图识别结果，准确率达到95% ，这块有点夸张。</p><p>阿里：</p><p>阿里的团队比较完善，人也比较多，单单一个客服团队，就由50+的人在做这些， 而且整体系统上看过去做的时间比较就也比较全面，主要他们也是对用户对行为特征进行意图分类的预测。 他们主要结合用户行为序列与Query的意图识别分类，使用词袋 + RNN + CNN 等对文本进行embedding 然后在用DNN 2-channel 针对多标签进行分类。 他们的基于图谱与IR模型相结合的QA Bot 使用 文本预处理 + 分词处理 + 纠错， 基于 搜索召唤模块，从现有的结构化知识库中，通过语料索引构建的索引模块，检索，然后计算模块进行 相似度，情感分析，文本属性识别 等，然后组装答案，在给出回答。他们这块对于语义关系部分的自动挖掘，使用图算法来做， graph, aiml 来做意图关系及意图规则，最后生产特征， 也有通过分类，SM ,LDA2VC, cosine ,WMD 来做特征生成，这块看看由没有现成的我们可以使用的，业务这块特征抽取，目前占用了大量的人力和时间。</p><p>后面他们做的，ai boost核心算法技术，主要是在 预处理和特征工程这块，句子向量，相似度计算，聚类等，通过场景及语料，对问题进行处理，而我们现在也比较关注用户回复的答案。</p><p>后记</p><p>整体主要了解了各大公司在AI语言处理方向及对话机器人方向，基于场景和领域下，技术，算法的使用以及处理的过程，各家公司做的粒度和广度都有差别，但是总体来看，我们能从这边看到算法及处理过程的，对于我们现在的实际进行中的项目还是有很大帮助的。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Tue Feb 06 2018 13:42:26 GMT+0800 (CST) --&gt;&lt;p&gt;时间： 2017-09-23 上海 携程&lt;/p&gt;&lt;p&gt;议题：人机智能交互AI与客服机器人&lt;/p&gt;&lt;p&gt;PDF及录音：&lt;a href=&quot;https://pan
      
    
    </summary>
    
      <category term="ai" scheme="http://yangxinqi.com/categories/ai/"/>
    
    
  </entry>
  
  <entry>
    <title>机器学习入门</title>
    <link href="http://yangxinqi.com/2017/07/02/ji-qi-xue-xi-ru-men/"/>
    <id>http://yangxinqi.com/2017/07/02/ji-qi-xue-xi-ru-men/</id>
    <published>2017-07-02T14:03:55.000Z</published>
    <updated>2018-02-06T02:26:45.962Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Feb 06 2018 13:42:26 GMT+0800 (CST) --><p><img src="/images/ai_s.png?style=centerme" alt="AI入门"></p><h3 id="AI的入门"><a href="#AI的入门" class="headerlink" title="AI的入门"></a>AI的入门</h3><p>AI的概念越来越热，各大厂都在深入的使用AI技术来提高各自的业务水平，各种创业公司和团队都在使用这个技术，在东京这块也有很多的机器人公司在尝试使用这个技术来做一些新业务的尝试，自己也不能免俗的加入的AI开发者的行业。对于算法和机器学习都不精的情况下，其实面对应用场景和技术的匹配，还是很难判断，只能一步一步的跟进，从而在真正的产品中，能够把产品做出来，有实际使用才有话语权，也有投入能够把这块做的更好。</p><h3 id="机器学习的入门"><a href="#机器学习的入门" class="headerlink" title="机器学习的入门"></a>机器学习的入门</h3><p>从AI到机器学习，其实感觉都没撒太大的区别，对于初学者来说，我们也表示下会一些CNN从而可以说明你会点机器学习吧，但是这块地算法真心的不少。</p><h3 id="移动设备机器学习的入门"><a href="#移动设备机器学习的入门" class="headerlink" title="移动设备机器学习的入门"></a>移动设备机器学习的入门</h3><p>从图片做简单的分类，这个是现在常见的在做的部分，当然也是想在iOS和Android上使用这块地技术来做一些实践的产品。</p><p>今天演示用的iOS代码在这里下载：</p><p><a href="https://github.com/xinqiyang/iOS-10-Sampler" target="_blank" rel="noopener">https://github.com/xinqiyang/iOS-10-Sampler</a></p><h3 id="做个PPT自己学习下"><a href="#做个PPT自己学习下" class="headerlink" title="做个PPT自己学习下"></a>做个PPT自己学习下</h3><p>投入的时间不够，只能在现在业务繁忙的情况下，多投入一些时间来吧这块事情做好。</p><p>就做一个PPT做一个session，这样有自学有交流，这样能够学习到更多。</p><p>下载地址：</p><p><a href="http://yangxinqi.com/images/machine_learning_in_mobile.pdf">http://yangxinqi.com/images/machine_learning_in_mobile.pdf</a></p><h3 id="最后攒钱买机器"><a href="#最后攒钱买机器" class="headerlink" title="最后攒钱买机器"></a>最后攒钱买机器</h3><p>最后还是花钱去搞了一台机器了，开始AI的模型训练之旅了。</p><h3 id="精彩在最后"><a href="#精彩在最后" class="headerlink" title="精彩在最后"></a>精彩在最后</h3><p>在接近尾声的时候，从讨论中擦出了火花，过来的周兄是移动方面的大牛，给了不少推荐，最后有乐天的任兄给我们聊了下机器学习在金融方面的应用，顿时大家兴趣备至啊，终于有和钱相关的话题了，虽然现在还是半自动的，虽然现在AI还只是能给出建议，但是在很多的方面已经能够直接商用了，说明这个方向在未来的2-3年内应该还是很热门的。</p><p><img src="/images/ai.png?style=centerme" alt="AI入门"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Tue Feb 06 2018 13:42:26 GMT+0800 (CST) --&gt;&lt;p&gt;&lt;img src=&quot;/images/ai_s.png?style=centerme&quot; alt=&quot;AI入门&quot;&gt;&lt;/p&gt;&lt;h3 id=&quot;AI的入门&quot;&gt;&lt;a hr
      
    
    </summary>
    
      <category term="ai" scheme="http://yangxinqi.com/categories/ai/"/>
    
    
  </entry>
  
  <entry>
    <title>三年之后</title>
    <link href="http://yangxinqi.com/2017/04/30/san-nian-zhi-hou/"/>
    <id>http://yangxinqi.com/2017/04/30/san-nian-zhi-hou/</id>
    <published>2017-04-30T14:36:11.000Z</published>
    <updated>2018-02-03T16:30:17.179Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Feb 06 2018 13:42:26 GMT+0800 (CST) --><h1 id="三年之后"><a href="#三年之后" class="headerlink" title="三年之后"></a>三年之后</h1><p>“三年后又三年，就快10年了，老大!” — 这个没记错的话，应该是无间道里面梁朝伟饰演的陈永仁说的。</p><p>今天是从正式创立公司满三年的子，三年前的今天决心了出来做一个属于自己的公司，有一个梦想，想弯道超车，但是就现在的结果来看，很多时候都未能如愿。</p><p>商场上的挣扎，和作为程序员本身的基本追求，又有着很大的冲突。</p><p>庆幸我们现在还活着，庆幸现在还没有放弃。</p><p>虽然现在大部分的时间不属于自己，但是整体拼杀过来，有一个小小的团队，还是有可能的。</p><p>尽人事，听天命，掌握好时间，做好自己该做的事情。</p><p><img src="/images/3year.jpeg?style=centerme" alt="3年之后"></p><p>下一个三年，还在等着，希望十年后的今天，在来回首看，会感谢现在努力拼搏的自己。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Tue Feb 06 2018 13:42:26 GMT+0800 (CST) --&gt;&lt;h1 id=&quot;三年之后&quot;&gt;&lt;a href=&quot;#三年之后&quot; class=&quot;headerlink&quot; title=&quot;三年之后&quot;&gt;&lt;/a&gt;三年之后&lt;/h1&gt;&lt;p&gt;“三年
      
    
    </summary>
    
      <category term="other" scheme="http://yangxinqi.com/categories/other/"/>
    
    
  </entry>
  
  <entry>
    <title>时间管理和情绪管理</title>
    <link href="http://yangxinqi.com/2017/03/17/shi-jian-guan-li-he-qing-xu-guan-li/"/>
    <id>http://yangxinqi.com/2017/03/17/shi-jian-guan-li-he-qing-xu-guan-li/</id>
    <published>2017-03-17T02:33:42.000Z</published>
    <updated>2018-02-03T16:30:09.187Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Feb 06 2018 13:42:26 GMT+0800 (CST) --><h1 id="好死不如赖活着"><a href="#好死不如赖活着" class="headerlink" title="好死不如赖活着"></a>好死不如赖活着</h1><p>活着讲究的是一种境界，死了一切就扯淡了。有的时候发现，有品节的去死不如好好的活着，其实很多时候大中华民族的气节也是这样的，所以面对现在的种种历史问题，新一代的人总是一直的去回避，我们都躲的远远的这样就能规避掉这个问题了。</p><p>想要赖活着，这样的状态下，面对生活，必须有自己的时间管理和情绪管理的心态，不然还是做不到的，人改变自己的劣根性是很难的，我们自己改下自己的行为习惯就更难了。</p><p>自创业以来，自己就像一个陀螺一样，转的停不下来，N个项目，N个ticket需要去处理，可是时间总是那么那么的平凡，就是这么的24小时。</p><p><img src="/images/huozhe.jpg?style=centerme" alt="huozhe"></p><h2 id="改变应该从时间管理开始"><a href="#改变应该从时间管理开始" class="headerlink" title="改变应该从时间管理开始"></a>改变应该从时间管理开始</h2><p>时间及事情的优先级总是这样的，然后协调的好不好，其实重在自己的心态，活都是那么多，愉快的干完和痛苦的干完，心态是完全不一样的，就送你拼尽全力，好多的活还是那些，我们很难能够都面面俱到的处理好。</p><p>到这个月过完，创业三周年即将到来，一直没有时间回首复盘下这3年来自己走过的这一切。</p><p>看到朋友们的生活，其实3年就可以变很多，现在没有变的是，3年来一直维持着自己的公司，走走停停，好歹还活着吧。 所以解放是很关键的，搞来搞去，不能老是在高压的状态下，面对时间，还有外界的压力，应该用自己的节奏去控制它，而不应该是被别人所控制。</p><h4 id="1-周末的休息是必须的，平日的加班是要有效率的"><a href="#1-周末的休息是必须的，平日的加班是要有效率的" class="headerlink" title="1.周末的休息是必须的，平日的加班是要有效率的"></a>1.周末的休息是必须的，平日的加班是要有效率的</h4><p>​ 看到很多团队，周末一直在加班，一直在高压的状态，而且持续好几个月，而且经常出现，这个创业团队里面也比较常见，体会过来感觉真的挺没有必要的，技能重在积累，做为一个商业模式必须考虑盈利。 所以留给自己一个充裕的时间，能更有效的来思考。在加上现在有了孩子，更需要多抽时间来陪他了。</p><p>​ 平日的加班，其实多数情况下是无效率的，经历下来好多时候都没有啥用，项目在最后的关头，才开始努力的去面对之前未完成的功能，靠加人和加班都是于事无补的感觉，现在来看还是比较难以见效。 所以加班不可避免的要解决问题的情况下，还不如第二天清醒的来快速解决。</p><h4 id="2-团队管理上时间的分配和协调"><a href="#2-团队管理上时间的分配和协调" class="headerlink" title="2. 团队管理上时间的分配和协调"></a>2. 团队管理上时间的分配和协调</h4><p>​ 团队开发，在最后都要避免加班，用一个已经磨合好的团队，做事情自然会快一些，用google日历来管理，大家的每个工作时间，精确到半个小时，效率就自然能上来的了，其次是给大家一些反馈，对于现在存在的问题能够尽快的沟通，当面沟通比聊天来的好，自然就能有效率了。</p><h2 id="情绪管理不淡定的情况下如何淡定"><a href="#情绪管理不淡定的情况下如何淡定" class="headerlink" title="情绪管理不淡定的情况下如何淡定"></a>情绪管理不淡定的情况下如何淡定</h2><p>自己挖的坑自己填，做错的事情，下次不要在犯错，现在的情况下大家都是这么来处理的。 但是在好多达不到自己的标准下，还是很难的在这个问题上达成一致。</p><p>找个不伤害人的方式发泄吧。</p><p>还是得发泄掉就好了。当心情极度不佳的时候，如何控制好情绪很关键！</p><p>无法两全的情况下，只能选择一个了，做好自己认为的最重要的一个很关键，为自己活一回，还是想为自己而站，这也是一直以来自己的理想。</p><p>想想自己，想想自己要做的就好了。</p><p>扯到底，扯好了，好吧，扯好了，开始干活去！</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Tue Feb 06 2018 13:42:26 GMT+0800 (CST) --&gt;&lt;h1 id=&quot;好死不如赖活着&quot;&gt;&lt;a href=&quot;#好死不如赖活着&quot; class=&quot;headerlink&quot; title=&quot;好死不如赖活着&quot;&gt;&lt;/a&gt;好死不如赖活
      
    
    </summary>
    
      <category term="other" scheme="http://yangxinqi.com/categories/other/"/>
    
    
  </entry>
  
  <entry>
    <title>xinqiyang复活</title>
    <link href="http://yangxinqi.com/2017/02/20/xinqiyangfu-huo/"/>
    <id>http://yangxinqi.com/2017/02/20/xinqiyangfu-huo/</id>
    <published>2017-02-20T09:47:09.000Z</published>
    <updated>2018-02-03T16:30:04.262Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Feb 06 2018 13:42:26 GMT+0800 (CST) --><h1 id="复活"><a href="#复活" class="headerlink" title="复活"></a>复活</h1><p>好久以来一直想复活下yangxinqi.com，今天终于买下来了，一看断断续续，从13年之后，来了日本之后就没在咋个写过Blog了，来日本确实是另外一番景象，快5年了，想找回曾经的那个自己，遂又开始写博，对于创业将近3年的老油条来讲，这一路走来的一幕幕，急需复盘，有时候走累了停一停，整理整理思路。</p><p>好吧，给自己一个新的开始，复活, 把blog放到github上，github还是很靠谱的，在有生之年应该都还在吧</p><p>这个判断应该是对的。</p><p>分享出去，为了每篇文章的美观，后续我都会加上图片的：</p><p><img src="/images/fuhuo.jpg?style=centerme" alt="come back!"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Tue Feb 06 2018 13:42:26 GMT+0800 (CST) --&gt;&lt;h1 id=&quot;复活&quot;&gt;&lt;a href=&quot;#复活&quot; class=&quot;headerlink&quot; title=&quot;复活&quot;&gt;&lt;/a&gt;复活&lt;/h1&gt;&lt;p&gt;好久以来一直想复活下y
      
    
    </summary>
    
      <category term="other" scheme="http://yangxinqi.com/categories/other/"/>
    
    
  </entry>
  
</feed>
